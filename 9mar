getDisplayDateFormat(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'displayDateFormat',
      type: 'select',
      templateOptions: {
        label: 'Selete display date format',
        placeholder: placeHolder,
        required: true,
        options: [
          {value: 'MM/DD/YYYY', label: "MM/DD/YYYY"},
          {value: 'YYYY-MM-DD', label: "YYYY-MM-DD"}
        ]
      }
    }
  }

  getQueryFilterDisplayYear(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'filterDisplayYear',
      type: 'select',
      templateOptions: {
        label: 'Selete filter display year',
        multiple: true,
        placeholder: placeHolder,
        required: true,
        options: [
          {value: '2021', label: "2021"},
          {value: '2022', label: "2022"}
        ]
      }
    }
  }

  getParameter(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'parameter',
      type: 'select',
      templateOptions: {
        label: 'Selete parameter',
        placeholder: placeHolder,
        required: true,
        options: [
          {value: 'year', label: "year"},
          {value: 'startDate', label: "startDate"},
          {value: 'endDate', label: "endDate"}
        ]
      }
    }
  }

  getOperator(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'operator',
      type: 'select',
      templateOptions: {
        label: 'Selete operator',
        placeholder: placeHolder,
        required: true,
        options: [
          {value: '=', label: "="},
          {value: '>=', label: ">="},
          {value: '<=>', label: "<=>"}
        ]
      }
    }
  }

  headingParameterConfig(label: string): FormlyFieldConfig {
    return {
      template: `<div><strong>${label}</strong></div>`
    };
  }

  getFilterDateFormat(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'filterDateFormat',
      type: 'select',
      templateOptions: {
        label: 'Selete filter date format',
        placeholder: placeHolder,
        required: true,
        options: [
          {value: 'YYYY', label: "YYYY"},
          {value: 'YYYY-MM-DD', label: "YYYY-MM-DD"}
        ]
      }
    }
  }

  getQueryParameters(placeHolder: string): FormlyFieldConfig {
    return {
      fieldGroup: [{
        key: 'queryParameters',
        type: 'repeat',
        fieldArray: {
          templateOptions: {
            btnText: placeHolder,
          },
          fieldGroup: [
            this.getParameter(''),
            this.getOperator('Values'),
            this.getFilterDateFormat('')
          ]
        },
      }]
    }
  }

  getValueParameters(placeHolder: string): FormlyFieldConfig {
    return {
      key: 'value',
      type: 'select',
      templateOptions: {
        label: 'Selete Value',
        placeholder: placeHolder,
        required: true,
        options: [
          {value: 'Completed', label: "Completed"}
        ]
      }
    }
  }
  
  
  
  
  
  
  
  
  
  
  
  {
        name: 'displayDateFormat',
        calc: 'displayDateFormat',
        hasError: false,
        description: 'Apply the data display formats for the response body attribute.',
        fields: [
          this.vfc.getDisplayDateFormat('Select')
        ]
      },
      {
        name: 'dateQueryFilter',
        calc: 'dateQueryFilter',
        hasError: false,
        description: '',
        fields: [
          this.vfc.getQueryFilterDisplayYear('Select display year'),
          this.vfc.headingParameterConfig('Parameter: '),
          this.vfc.getQueryParameters('Add more')
        ]
      },
      {
        name: 'queryFilter',
        calc: 'queryFilter',
        hasError: false,
        description: '',
        fields: [
          this.vfc.getOperator('Select'),
          this.vfc.getValueParameters('Select')
        ]
      }
      
      
      
      
      
      queryParameters:[{}]
      
      
      
      
      else if(validator.name == "displayDateFormat") {
              dataObject[namePath].database.mappings[field]['displayDateFormat'] = validator.errorResponse.displayDateFormat;
            } else if(validator.name == "dateQueryFilter") {
              dataObject[namePath].database.mappings[field]['queryFilter'] = true;
              dataObject[namePath].database.mappings[field]['queryFilterDisplayYear'] = validator.errorResponse.filterDisplayYear;

              if (validator.errorResponse.queryParameters && validator.errorResponse.queryParameters.length) {
                dataObject[namePath].database.mappings[field]['queryParameters'] = [];
                for(let depndency of validator.errorResponse.queryParameters) {
                  let obj = {
                    "parameter": depndency.parameter,
                    "operator": depndency.operator,
                    "filterDateFormat": depndency.filterDateFormat
                  }
                  dataObject[namePath].database.mappings[field]['queryParameters'].push(obj);
                }
              }
            } else if(validator.name == "queryFilter") {
              dataObject[namePath].database.mappings[field]['queryFilter'] = true;
              dataObject[namePath].database.mappings[field]['queryParameters'] = [];
              let obj = {
                "value": validator.errorResponse.value,
                "operator": validator.errorResponse.operator,
                "filterDateFormat": depndency.filterDateFormat
              }
              dataObject[namePath].database.mappings[field]['queryParameters'].push(obj);
            }
